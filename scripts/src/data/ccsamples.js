// JavaScript source code
var STRUCTURE_SAMPLES = [{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 16, children: [{ id: 34, parent: 16 }, { id: 16, children: [{ id: 33, parent: 16 }, { id: 22, parent: 16 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 16 }], parent: 16 }, { id: 22, parent: 16 }], parent: 16 }, { id: 22, parent: 16 }], parent: 7 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 0, parent: 5 }, { id: 0, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 0, parent: 5 }, { id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }, { id: 12, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 12 }], parent: 2 }], parent: 4 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 7 }], parent: 2 }, { id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 12, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 12 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 23, parent: 7 }], parent: 2 }, { id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 8, children: [{ id: 9, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 9 }, { id: 22, parent: 9 }, { id: 0, parent: 9 }], parent: 8 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 8 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 16, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 8, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 12, children: [{ id: 18, children: [{ id: 16, parent: 18 }], parent: 12 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 8, children: [{ id: 9, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 9 }, { id: 22, parent: 9 }, { id: 0, parent: 9 }], parent: 8 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 8 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 16, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 8, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 1 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 23, parent: 7 }], parent: 2 }, { id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 7 }, { id: 16, children: [{ id: 0, parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 7 }, { id: 16, children: [{ id: 0, parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 1 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 11, children: [{ id: 19, children: [{ id: 0, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 19, children: [{ id: 0, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 22, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 19, children: [{ id: 0, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 22, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 19, children: [{ id: 0, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }, { id: 22, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 21, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 21, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 21, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 21, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 21, parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 4, children: [{ id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }], parent: 4 }, { id: 2, children: [{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }], parent: 2 }], parent: 4 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 23, parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 0, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 21, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 6, children: [{ id: 13, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 13 }, { id: 22, parent: 13 }, { id: 28, parent: 13 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }], parent: 6 }] },
{ id: 6, children: [{ id: 13, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 13 }, { id: 22, parent: 13 }, { id: 28, parent: 13 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }], parent: 6 }] },
{ id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }] },
{ id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }] },
{ id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }], parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }], parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }] },
{ id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }], parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }] },
{ id: 6, children: [{ id: 15, children: [{ id: 0, parent: 15 }, { id: 0, children: [{ id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }, { id: 13, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 13 }, { id: 23, parent: 13 }, { id: 28, parent: 13 }], parent: 0 }], parent: 15 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 0, parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 0, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 6 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 24, parent: 18 }], parent: 5 }], parent: 11 }], parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 0, parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 7 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 8, children: [{ id: 10, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 10 }], parent: 8 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 8 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 24, parent: 18 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 5 }], parent: 11 }], parent: 2 }, { id: 6, children: [{ id: 13, children: [{ id: 16, children: [{ id: 27, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 13 }, { id: 22, parent: 13 }, { id: 28, parent: 13 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 24, parent: 18 }], parent: 5 }], parent: 11 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 8, children: [{ id: 9, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 9 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 9 }, { id: 0, parent: 9 }], parent: 8 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 8 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 8, children: [{ id: 9, children: [{ id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 9 }, { id: 22, parent: 9 }, { id: 0, parent: 9 }], parent: 8 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 8 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 6 }], parent: 2 }], parent: 1 }] },
{ id: 6, children: [{ id: 13, children: [{ id: 16, children: [{ id: 27, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 13 }, { id: 22, parent: 13 }, { id: 28, parent: 13 }], parent: 6 }, { id: 0, parent: 6 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 24, parent: 18 }], parent: 5 }], parent: 11 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 8, children: [{ id: 9, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 9 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 9 }, { id: 0, parent: 9 }], parent: 8 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 8 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 8, children: [{ id: 9, children: [{ id: 16, children: [{ id: 32, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 9 }, { id: 22, parent: 9 }, { id: 0, parent: 9 }], parent: 8 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 8 }], parent: 7 }], parent: 2 }, { id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 16 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 6 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 16, children: [{ id: 32, parent: 16 }, { id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 18, children: [{ id: 24, parent: 18 }], parent: 5 }], parent: 11 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 7 }], parent: 2 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 8, children: [{ id: 10, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 10 }], parent: 8 }, { id: 18, children: [{ id: 24, parent: 18 }], parent: 8 }], parent: 5 }, { id: 22, parent: 5 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 5 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 22, parent: 18 }], parent: 16 }, { id: 22, parent: 16 }], parent: 5 }], parent: 11 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 0, parent: 7 }, { id: 16, children: [{ id: 31, parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }, { id: 11, children: [{ id: 19, children: [{ id: 23, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 5 }], parent: 11 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 1 }] },
{ id: 1, children: [{ id: 18, children: [{ id: 22, parent: 18 }], parent: 1 }, { id: 11, children: [{ id: 0, parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }], parent: 11 }], parent: 1 }, { id: 2, children: [{ id: 7, children: [{ id: 18, children: [{ id: 23, parent: 18 }], parent: 7 }, { id: 16, children: [{ id: 0, parent: 16 }, { id: 18, children: [{ id: 23, parent: 18 }], parent: 16 }, { id: 11, children: [{ id: 19, children: [{ id: 23, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 11, children: [{ id: 19, children: [{ id: 22, parent: 19 }], parent: 11 }, { id: 5, children: [{ id: 22, parent: 5 }, { id: 22, parent: 5 }], parent: 11 }], parent: 5 }], parent: 11 }], parent: 16 }], parent: 7 }], parent: 2 }], parent: 1 }] }];


var PY_LIST_FUNCS = ['append', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort'];
var PY_STR_FUNCS = ['join', 'split', 'strip', 'rstrip', 'lstrip', 'startswith', 'upper', 'lower'];
var PY_CREATE_LIST_FUNCS = ['append', 'extend', 'insert', 'reverse', 'sort'];
var PY_CREATE_STR_FUNCS = ['join', 'strip', 'rstrip', 'lstrip', 'upper', 'lower', 'shuffleString'];

var JS_BUILT_IN_OBJECTS = ["Math", "Object", "Function", "Boolean", "Symbol", "Error", "Number", "BigInt", "Date", "String", "RegExp", "Array", "Map", "Set"]; //this is not complete but if a student uses something else then I give up.
var JS_LIST_FUNCS = ['length', 'of', 'concat', 'copyWithin', 'entries', 'every', 'fill', 'filter', 'find', 'findIndex', 'forEach', 'includes', 'indexOf', 'join', 'keys', 'lastIndexOf', 'map', 'pop', 'push', 'reduce', 'reduceRight', 'reverse', 'shift', 'slice', 'some', 'sort', 'splice', 'toLocaleString', 'toSource', 'toString', 'unshift', 'values'];
var JS_STR_FUNCS = ['length', 'fromCharCode', 'fromCodePoint', 'anchor', 'big', 'blink', 'bold', 'charAt', 'charCodeAt', 'codePointAt', 'concat', 'endsWith', 'fixed', 'fontcolor', 'fontsize', 'includes', 'indexOf', 'italics', 'lastIndexOf', 'link', 'localeCompare', 'match', 'normalize', 'padEnd', 'padStart', 'quote', 'repeat', 'replace', 'search', 'slice', 'small', 'split', 'startsWith', 'strike', 'sub', 'substr', 'substring', 'sup', 'toLocaleLowerCase', 'toLocaleUpperCase', 'toLowerCase', 'toSource', 'toString', 'toUpperCase', 'trim', 'trimLeft', 'trimRight', 'valueOf', 'raw'];
var JS_STR_LIST_OVERLAP = ["length", "concat", "includes", "indexOf", "lastIndexOf", "slice", "toSource", "toString"];

var starterReturns = [{ name: "analyze", returns: "Float" }, { name: "len", returns: "Int" }, { name: "gauss", returns: "Float" }, { name: "analyzeForTime", returns: "Float" }, { name: "random", returns: "Float" }, { name: "floor", returns: "Int" }, { name: "randint", returns: "Int" }, { name: "analyzeTrack", returns: "Float" }, { name: "analyzeTrackForTime", returns: "Float" }, { name: "dur", returns: "Float" }, { name: "importImage", returns: "List" }, { name: "importFile", returns: "Str" }, { name: "readInput", returns: "Str" }, { name: "replaceString", returns: "Str" }, { name: "reverseList", returns: "List" }, { name: "reverseString", returns: "Str" }, { name: "shuffleList", returns: "List" }, { name: "shuffleString", returns: "Str" }, { name: "int", returns: "Int" }, { name: "float", returns: "Float" }, { name: "str", returns: "Str" }, { name: "count", returns: "int" }, { name: "index", returns: "int" }, { name: "split", returns: "List" }, { name: "startswith", returns: "Bool" },
        { name: "count", returns: "int" }, { name: "index", returns: "int" }, { name: "split", returns: "List" }, { name: "startswith", returns: "Bool" }, { name: "length", returns: "Int" }, { name: "str", returns: "String" },
        { name: "of", returns: "List" }, { name: "copyWithin", returns: "List" }, { name: "entries", returns: "List" },
        { name: "every", returns: "Bool" }, { name: "fill", returns: "List" }, { name: "filter", returns: "List" }, { name: "findIndex", returns: "Int" }, { name: "includes", returns: "Bool" },
        { name: "indexOf", returns: "Int" }, { name: "join", returns: "Str" }, { name: "keys", returns: "List" }, { name: "lastIndexOf", returns: "Int" }, { name: "map", returns: "List" },
        { name: "reverse", returns: "List" }, { name: "some", returns: "Bool" }, { name: "sort", returns: "List" }, { name: "splice", returns: "List" },
        { name: "toLocaleString", returns: "Str" }, { name: "toSource", returns: "Str" }, { name: "toString", returns: "Str" }, { name: "unshift", returns: "Int" }, { name: "values", returns: "List" },
        { name: "fromCharCode", returns: "Str" }, { name: "fromCodePoint", returns: "Str" }, { name: "anchor", returns: "Str" }, { name: "big", returns: "Str" }, { name: "blink", returns: "Str" },
        { name: "bold", returns: "Str" }, { name: "charAt", returns: "Int" }, { name: "charCodeAt", returns: "Int" }, { name: "codePointAt", returns: "Int" }, { name: "endsWith", returns: "Bool" },
        { name: "fixed", returns: "Str" }, { name: "fontColor", returns: "Str" }, { name: "fontSize", returns: "Str" }, { name: "italics", returns: "Str" }, { name: "link", returns: "Str" },
        { name: "localeCompare", returns: "Int" }, { name: "match", returns: "List" }, { name: "normalize", returns: "Str" }, { name: "padEnd", returns: "Str" }, { name: "padStart", returns: "Str" },
        { name: "quote", returns: "Str" }, { name: "repeat", returns: "Str" }, { name: "replace", returns: "Str" }, { name: "search", returns: "Int" }, { name: "small", returns: "Str" },
        { name: "startsWith", returns: "Bool" }, { name: "strike", returns: "Str" }, { name: "sub", returns: "Str" }, { name: "substr", returns: "Str" },
        { name: "substring", returns: "Str" }, { name: "sup", returns: "Str" }, { name: "toLocaleLowerCase", returns: "Str" }, { name: "toLocaleUpperCase", returns: "Str" },
        { name: "toLowerCase", returns: "Str" }, { name: "toUpperCase", returns: "Str" }, { name: "trim", returns: "Str" }, { name: "trimLeft", returns: "Str" },
        { name: "trimRight", returns: "Str" }, { name: "valueOf", returns: "Str" }, { name: "raw", returns: "Str" }];


var sampleCode = ["# python code", "#", "# script_name: Intro Script", "#", "# author: The EarSketch Team", "#", "", "# description: This code adds one audio clip to the DAW", "#", "#", "#", "#Setup Section", "from earsketch import *", "init()", "setTempo(120)", "#Music Section", "fitMedia(TECHNO_SYNTHPLUCK_001, 1, 1, 9)", "#Finish Section", "finish()", "# python code", "#", "# script_name: EarSketch Demo", "#", "# author: The EarSketch Team", "#", "# description: Using fitMedia() to add a clip to the DAW.", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "fitMedia(Y18_DRUM_SAMPLES_2, 1, 1, 5)", "#Finish", "finish()", "# python code", "#", "# script_name: Opus 1", "#", "# author: The EarSketch Team", "#", "# description: Using multiple fitMedia() calls, on different tracks and with different clips.", "#", "#", "#", "# Setup Section", "from earsketch import *", "init()", "setTempo(100)", "# Music Section", "fitMedia(Y01_DRUMS_1, 1, 1, 9)", "fitMedia(Y11_BASS_1, 2, 1, 9)", "fitMedia(Y11_GUITAR_1, 3, 1, 9)", "# Finish Section", "finish()", "# python code", "#", "# script_name: Beats", "#", "# author: The EarSketch Team", "#", "# description: Counting beats and sub-beats in a measure", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "# Each kick drum hit lasts a quarter note: 1/4 of a measure.", "fitMedia(TECHNO_LOOP_PART_002, 1, 1, 2)", "# Each cymbal hit lasts a 16th note: 1/16 of a measure.", "#fitMedia(TECHNO_LOOP_PART_031, 2, 1, 2)", "#Finish", "finish()", "# python code", "#", "# script_name: Variables", "#", "# author: The EarSketch Team", "#", "# description: Using variables to store clips and simplify edits", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(100)", "#Music", "# Try assigning different clips to \"synth1\" and \"synth2\" for a new sound.", "synth1 = HIPHOP_SYNTHPLUCKLEAD_005 # Assigns a clip to the variable \"synth1\"", "#synth2 = HIPHOP_SOLOMOOGLEAD_001", "#drums = HIPHOP_TRAPHOP_BEAT_008", "# fitMedia adds the clip \"synth1\" is holding to the DAW", "fitMedia(synth1, 1, 1, 2)", "# synth1 and synth2 are used many times", "#fitMedia(synth2, 1, 2, 3)", "#fitMedia(synth1, 1, 3, 4)", "#fitMedia(synth2, 1, 4, 4)", "#fitMedia(synth1, 1, 5, 6)", "#fitMedia(synth2, 1, 6, 7)", "#fitMedia(synth1, 1, 7, 8)", "#fitMedia(synth2, 1, 8, 9)", "fitMedia(drums, 2, 1, 9)", "#Finish", "finish()", "# python code", "#", "# script_name: Finding Errors With Comments", "#", "# author: The EarSketch Team", "#", "# description: This script causes an error. Fix the error by", "#              commenting out blocks", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(130)", "#Music", "claps = HOUSE_BREAKBEAT_006", "singleClap = OS_CLAP03", "hiHat = HOUSE_BREAKBEAT_012", "kick = HOUSE_BREAKBEAT_023", "chords = RD_EDM_ANALOGPLUCK_2", "lead1 = RD_EDM_ANALOGPLUCK_1", "lead2 = RD_TRAP_ARPBLEEPLEAD_5", "lead3 = HOUSE_DEEP_ARPLEAD_001", "bass1 = ELECTRO_ANALOGUE_BASS_013", "bass2 = ELECTRO_ANALOGUE_BASS_008", "noiseSweep = TECHNO_WHITENOISESFX_001", "#Leads", "# Try commenting out this block first", "fitMedia(lead1, 3, 17, 24)", "fitMedia(lead2, 8, 17, 25)", "fitMedia(lead2, 8, 9, 10)", "fitMedia(lead2, 8, 11, 12)", "fitMedia(lead2, 8, 13, 14)", "fitMedia(lead2, 8, 15, 17)", "fitMedia(lead3, 4, 5, 24)", "#Beat", "#Try commenting out this block next", "fitMedia(kick, 1, 1, 24)", "fitMedia(claps, 2, 5, 16)", "fitMedia(claps, 2, 17, 24)", "fitMedia(singleClap, 9, 16.75, 16.875)", "fitMedia(singleClap, 9, 16.875, 17)", "fitMedia(hiHat, 7, 17, 24", "#Auxiliary", "fitMedia(chords, 3, 1, 17)", "fitMedia(noiseSweep, 6, 15, 17)", "fitMedia(bass2, 5, 9, 17)", "fitMedia(bass1, 5, 17, 24)", "#Finish", "finish()", "# python code", "#", "# script_name: Find The Error 1", "#", "# author: The EarSketch Team", "#", "# description: Find and fix the error in this script", "#", "from earsketch import *", "init()", "setTempo(88)", "fitMedia(electroString, 1, 1, 9)", "electroString = Y13_STRING_1", "fitMedia(drums, 2, 5, 9)", "drums = HIPHOP_DUSTYGROOVE_017", "finish()", "# python code", "#", "# script_name: Find The Error 2", "#", "# author: The EarSketch Team", "#", "# description: Find and fix the error in this script", "#", "from earsketch import *", "init()", "setTempo(88)", "electroString = Y13_STRING_1", "drums = HIPHOP_DUSTYGROOVE_017", "fitMedia(electrostring, 1, 1, 9)", "fitMedia(drum, 2, 5, 9)", "finish()", "# python code", "#", "# script_name: Fixed Error", "#", "# author: The EarSketch Team", "#", "# description: A script free of errors", "#", "from earsketch import *", "init()", "setTempo(88)", "electroString = Y13_STRING_1", "drums = HIPHOP_DUSTYGROOVE_017", "fitMedia(electroString, 1, 1, 9)", "fitMedia(drums, 2, 5, 9)", "finish()", "# python code", "#", "# script_name: Delay Effect", "#", "# author: The EarSketch Team", "#", "# description: Adding delay to a track", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "lead1 = EIGHT_BIT_ATARI_SYNTH_001", "lead2 = EIGHT_BIT_ATARI_SYNTH_002", "pad1 = EIGHT_BIT_ATARI_PAD_002", "pad2 = EIGHT_BIT_ATARI_PAD_003", "drums1 = EIGHT_BIT_ANALOG_DRUM_LOOP_004", "drums2 = EIGHT_BIT_ANALOG_DRUM_LOOP_003", "fitMedia(lead1, 1, 1, 7)", "fitMedia(lead2, 1, 7, 9)", "fitMedia(pad1, 2, 1, 3)", "fitMedia(pad2, 2, 3, 5)", "fitMedia(pad1, 2, 5, 7)", "fitMedia(pad2, 2, 7, 9)", "fitMedia(drums1, 3, 3, 5)", "fitMedia(drums2, 3, 5, 9)", "#Effects", "#setEffect(1, DELAY, DELAY_TIME, 500) #Adds a delay (echo) effect, at intervals of 500ms", "#setEffect(1, DELAY, DELAY_FEEDBACK, -20.0) #Lowers the relative amount of repeats (default is -3.0)", "#Finish", "finish()", "# python code", "#", "# script_name: Envelopes", "#", "# author: The EarSketch Team", "#", "# description: Making envelopes with 7 parameter setEffect()", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "fitMedia(ELECTRO_ANALOGUE_LEAD_012, 1, 1, 9)", "# Makes an effect ramp between measures 1 and 3, moving from -60dB to 0dB", "setEffect(1, VOLUME, GAIN, -60, 1, 0, 3)", "#Finish", "finish()", "# python code", "#", "# script_name: Complex Envelopes", "#", "# author: The EarSketch Team", "#", "# description: Using multiple setEffect calls on a track to make changes in the effect envelope.", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "fitMedia(ELECTRO_ANALOGUE_LEAD_012, 1, 1, 9)", "# Envelope time points (in measures)", "pointA = 1", "pointB = 4", "pointC = 6.5", "pointD = 7", "pointE = 8.5", "pointF = 9", "setEffect(1, FILTER, FILTER_FREQ, 20, pointA, 10000, pointB) # first effect, filter sweep", "# second effect, volume changes", "setEffect(1, VOLUME, GAIN, -10, pointB, 0, pointC)  # crescendo", "setEffect(1, VOLUME, GAIN, 0, pointD, -10, pointE)  # begin fade out", "setEffect(1, VOLUME, GAIN, -10, pointE, -60, pointF) # end of fade out", "#Finish", "finish()", "#	python code", "#", "#	script_name: Transition Techniques - Drum Fill", "#", "#	author: The EarSketch Team", "#", "#	description: Transiting between sections with a drum fill", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(130)", "#Music", "leadGuitar1 = RD_ROCK_POPLEADSTRUM_GUITAR_4", "leadGuitar2 = RD_ROCK_POPLEADSTRUM_GUITAR_9", "bass1 = RD_ROCK_POPELECTRICBASS_8", "bass2 = RD_ROCK_POPELECTRICBASS_25", "drums1 = RD_ROCK_POPRHYTHM_DRUM_PART_10", "drums2 = RD_ROCK_POPRHYTHM_MAINDRUMS_1", "drumFill = RD_ROCK_POPRHYTHM_FILL_4", "# Section 1", "fitMedia(leadGuitar1, 1, 1, 8)", "fitMedia(bass1, 2, 1, 8)", "fitMedia(drums1, 3, 1, 8)", "# Drum Fill", "fitMedia(drumFill, 3, 8, 9)", "# Section 2", "fitMedia(leadGuitar2, 1, 9, 17)", "fitMedia(bass2, 2, 9, 17)", "fitMedia(drums2, 3, 9, 17)", "#Finish", "finish()", "# python code", "#", "# script_name: Transition Techniques - Track Dropouts", "#", "# author: The EarSketch Team", "#", "# description: Transitioning between sections with selective muting", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "introLead = TECHNO_ACIDBASS_002", "mainLead1 = TECHNO_ACIDBASS_003", "mainLead2 = TECHNO_ACIDBASS_005", "auxDrums1 = TECHNO_LOOP_PART_025", "auxDrums2 = TECHNO_LOOP_PART_030", "mainDrums = TECHNO_MAINLOOP_019", "bass = TECHNO_SUBBASS_002", "#Section 1", "fitMedia(introLead, 1, 1, 5)", "fitMedia(mainLead1, 1, 5, 9)", "fitMedia(auxDrums1, 2, 3, 5)", "fitMedia(auxDrums2, 2, 5, 8) # Drums drop out", "fitMedia(mainDrums, 3, 5, 8)", "#Section 2", "fitMedia(mainLead2, 1, 9, 17)", "fitMedia(auxDrums2, 2, 9, 17) # Drums enter back in", "fitMedia(mainDrums, 3, 9, 17)", "fitMedia(bass, 4, 9, 17)", "#Finish", "finish()", "# python code", "#", "# script_name: Transition Techniques - Risers", "#", "# author: The EarSketch Team", "#", "# description: Transitioning between sections using risers and a crash cymbal.", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(128)", "#Music", "synthRise = YG_EDM_SYNTH_RISE_1", "airRise = RD_EDM_SFX_RISER_AIR_1", "lead1 = YG_EDM_LEAD_1", "lead2 = YG_EDM_LEAD_2", "kick1 = YG_EDM_KICK_LIGHT_1", "kick2 = ELECTRO_DRUM_MAIN_LOOPPART_001", "snare = ELECTRO_DRUM_MAIN_LOOPPART_003", "crash = Y50_CRASH_2", "reverseFX = YG_EDM_REVERSE_FX_1", "#Section 1", "fitMedia(lead1, 1, 1, 17)", "fitMedia(kick1, 2, 9, 17)", "#Transition", "fitMedia(reverseFX, 3, 16, 17)", "fitMedia(synthRise, 4, 13, 17)", "fitMedia(airRise, 5, 13, 17)", "fitMedia(crash, 6, 17, 19)", "#Section 2", "fitMedia(lead2, 1, 17, 33)", "fitMedia(kick2, 7, 25, 33)", "fitMedia(snare, 8, 29, 33)", "#Effects", "setEffect(1, VOLUME, GAIN, 0, 16, 1, 17) #Adjusting volumes for better matching", "setEffect(4, VOLUME, GAIN, -10)", "setEffect(7, VOLUME, GAIN, -20)", "setEffect(8, VOLUME, GAIN, -20)", "#Finish", "finish()", "# python code", "#", "# script_name: A-B-A Form", "#", "# author: The EarSketch Team", "#", "# description: A song with A and B sections", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "# Create an A section", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_1, 1, 1, 5) # main", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_24, 2, 1, 5) # drums", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_7, 3, 1, 5) # bassline", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 1, 2) # backing", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 3, 4) # backing repeated", "# Create a 4 measure B section between measures 5 and 9", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_3, 1, 5, 9) # sparse drums", "fitMedia(RD_WORLD_PERCUSSION_SEEDSRATTLE_1, 3, 5, 9) # rattling", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 5, 6) # backing", "# Then back to section A at measure 9", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_1, 1, 9, 13) # main", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_24, 2, 9, 13) # drums", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_7, 3, 9, 13) # bassline", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 9, 10)  # backing", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 11, 12) # backing repeated", "#Finish", "finish()", "# python code", "#", "# script_name: Custom Functions", "#", "# author: The EarSketch Team", "#", "# description: Defining our own function that makes a section of music", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(100)", "#Music", "# Defining our new function with two parameters", "def myFunction(startMeasure, endMeasure):", " fitMedia(ELECTRO_DRUM_MAIN_BEAT_003, 1, startMeasure, endMeasure)", " fitMedia(ELECTRO_ANALOGUE_PHASERBASS_003, 2, startMeasure, endMeasure)", "# Calling our function, passing it two arguments: 1 and 17.", "myFunction(1, 17)", "#Finish", "finish()", "# python code", "#", "# script_name: Improved A-B-A", "#", "# author: The EarSketch Team", "#", "# description: Making form with custom functions", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "# A section", "def sectionA(startMeasure, endMeasure): # create an A section, placing music from startMeasure (inclusive) to endMeasure (exclusive)", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_1, 1, startMeasure, endMeasure) # main", "  fitMedia(RD_WORLD_PERCUSSION_DRUMPART_24, 2, startMeasure, endMeasure) # drums", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_7, 3, startMeasure, endMeasure) # bassline", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, startMeasure, startMeasure + 1) # backing", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, startMeasure + 2, startMeasure + 3) # backing repeated", "# B section", "def sectionB(startMeasure, endMeasure):", "  fitMedia(RD_WORLD_PERCUSSION_DRUMPART_3, 1, startMeasure, endMeasure) # sparse drums", "  fitMedia(RD_WORLD_PERCUSSION_SEEDSRATTLE_1, 3, startMeasure, endMeasure) # rattling", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, startMeasure, startMeasure + 1) # backing", "# Setting up an ABA musical form through function calls", "sectionA(1, 5)", "sectionB(5, 9)", "sectionA(9, 13)", "#Finish", "finish()", "# python code", "#", "# script_name: A-B-A-B Form WITHOUT functions", "#", "# author: The EarSketch Team", "#", "# description: A song with A and B sections", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "# Create an A section", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_1, 1, 1, 5) # main", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_24, 2, 1, 5) # drums", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_7, 3, 1, 5) # bassline", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 1, 2) # backing", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 3, 4) # backing repeated", "# Create a 4 measure B section between measures 5 and 9", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_3, 1, 5, 9) # sparse drums", "fitMedia(RD_WORLD_PERCUSSION_SEEDSRATTLE_1, 3, 5, 9) # rattling", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 5, 6) # backing", "# Back to section A at measure 9", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_1, 1, 9, 13) # main", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_24, 2, 9, 13) # drums", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_7, 3, 9, 13) # bassline", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 9, 10)  # backing", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 11, 12) # backing repeated", "# Then back to section B at measure 13.  The code is starting to look a lot messier when you're not using functions.", "fitMedia(RD_WORLD_PERCUSSION_DRUMPART_3, 1, 13, 17) # sparse drums", "fitMedia(RD_WORLD_PERCUSSION_SEEDSRATTLE_1, 3, 13, 17) # rattling", "fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, 13, 14) # backing", "#Finish", "finish()", "# python code", "#", "# script_name: A-B-A-B Form WITH functions", "#", "# author: The EarSketch Team", "#", "# description: Making form with custom functions", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "# A section", "def sectionA(startMeasure, endMeasure): # create an A section, placing music from startMeasure (inclusive) to endMeasure (exclusive)", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_1, 1, startMeasure, endMeasure) # main", "  fitMedia(RD_WORLD_PERCUSSION_DRUMPART_24, 2, startMeasure, endMeasure) # drums", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_7, 3, startMeasure, endMeasure) # bassline", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, startMeasure, startMeasure + 1) # backing", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, startMeasure + 2, startMeasure + 3) # backing repeated", "# B section", "def sectionB(startMeasure, endMeasure):", "  fitMedia(RD_WORLD_PERCUSSION_DRUMPART_3, 1, startMeasure, endMeasure) # sparse drums", "  fitMedia(RD_WORLD_PERCUSSION_SEEDSRATTLE_1, 3, startMeasure, endMeasure) # rattling", "  fitMedia(RD_WORLD_PERCUSSION_KALIMBA_PIANO_3, 4, startMeasure, startMeasure + 1) # backing", "# Setting up an ABA musical form through function calls", "sectionA(1, 5)", "sectionB(5, 9)", "sectionA(9, 13)", "sectionB(13, 17) # adding another section B only requires one more line of code if you use a function", "#Finish", "finish()", "# python code", "#", "# script_name: Multi Beat", "#", "# author: The EarSketch Team", "#", "# description: Using several makeBeat calls, and overlapping rhythms", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "synth = DUBSTEP_FILTERCHORD_002", "cymbal = OS_CLOSEDHAT01", "beat1 = \"-00-00+++00--0-0\"", "beat2 = \"0--0--000--00-0-\"", "makeBeat(synth, 1, 1, beat1)", "makeBeat(cymbal, 2, 1, beat2)", "#Finish", "finish()", "for i in range(2):", "	# Repeat indented code after the colon (:) several times.", "# python code", "#", "# script_name: Multi Beat", "#", "# author: The EarSketch Team", "#", "# description: Using a for-loop to create longer beats", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "synth = DUBSTEP_FILTERCHORD_002", "cymbal = OS_CLOSEDHAT01", "beat1 = \"-00-00+++00--0-0\"", "beat2 = \"0--0--000--00-0-\"", "# By adding one extra line and indenting, we achieve repetition", "for measure in range(1,4):", "   makeBeat(synth, 1, measure, beat1)", "   makeBeat(cymbal, 2, measure, beat2)", "#Finish", "finish()", "# python code", "#", "# script_name: Drum beat (no loops)", "#", "# author: The EarSketch Team", "#", "#	description: Musical repetition created without code loops", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "drums1 = ELECTRO_DRUM_MAIN_BEAT_008", "drums2 = ELECTRO_DRUM_MAIN_BEAT_007", "# All of these fitMedia() calls could be replaced with two calls placed in a loop", "fitMedia(drums1, 1, 1, 1.5)", "fitMedia(drums2, 1, 1.5, 2)", "fitMedia(drums1, 1, 2, 2.5)", "fitMedia(drums2, 1, 2.5, 3)", "fitMedia(drums1, 1, 3, 3.5)", "fitMedia(drums2, 1, 3.5, 4)", "fitMedia(drums1, 1, 4, 4.5)", "fitMedia(drums2, 1, 4.5, 5)", "fitMedia(drums1, 1, 5, 5.5)", "fitMedia(drums2, 1, 5.5, 6)", "fitMedia(drums1, 1, 6, 6.5)", "fitMedia(drums2, 1, 6.5, 7)", "fitMedia(drums1, 1, 7, 7.5)", "fitMedia(drums2, 1, 7.5, 8)", "fitMedia(drums1, 1, 8, 8.5)", "fitMedia(drums2, 1, 8.5, 9)", "#Finish", "finish()", "#	python code", "#", "#	script_name: Drum beat (with loops)", "#", "#	author: The EarSketch Team", "#", "#	description: Musical repetition created with code loops", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "drums1 = ELECTRO_DRUM_MAIN_BEAT_008", "drums2 = ELECTRO_DRUM_MAIN_BEAT_007", "#Using a loop instead of repeatedly writing similar lines of code", "for measure in range (1, 9):", "  fitMedia(drums1, 1, measure, measure + 0.5)", "  fitMedia(drums2, 1, measure + 0.5 , measure + 1)", "#Finish", "finish()", "# python code", "#", "# script_name: Panning Loop", "#", "# author: The EarSketch Team", "#", "# description: Adding music with loops; panning incrementally with loops", "#", "#", "#", "from earsketch import *", "init()", "setTempo(130)", "#Music", "drums1 = ELECTRO_DRUM_MAIN_BEAT_005", "drums2 = ELECTRO_DRUM_MAIN_BEAT_006", "synth = Y02_KEYS_1", "guitar = Y09_WAH_GUITAR_1", "# for-loop to create alternating drum beat", "for measure in range(1, 9):", "  fitMedia(drums1, 1, measure, measure + 0.5)", "  fitMedia(drums2, 2, measure + 0.5 , measure + 1)", "# additional fitMedia() calls for guitar and synth", "fitMedia(guitar, 3, 1, 9)", "fitMedia(synth, 4, 5, 9)", "# panning effects for all tracks (1-4)", "for track in range(1, 5):", "	panAmount = 200 * (track - 1) / 3 - 100", "	setEffect(track, PAN, LEFT_RIGHT, panAmount)", "#Finish", "finish()", "# python code", "#", "# script_name: Rhythmic Ramps", "#", "# author: The EarSketch Team", "#", "# description: Automating effects with a for-loop", "#", "#", "#", "# Setup", "from earsketch import *", "init()", "setTempo(120)", "# Music", "fitMedia(Y33_CHOIR_1, 1, 1, 17)", "fitMedia(RD_ELECTRO_MAINBEAT_5, 2, 1, 17)", "for measure in range(1, 17):", "  setEffect(1, VOLUME, GAIN, -60, measure, 0, measure+1)", "# Finish", "finish()", "# python code", "#", "# script_name: Simple Return Statements", "#", "# author: The EarSketch Team", "#", "# description: Returning the result of a mathematical expression", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Body", "def addNumbers(numb1, numb2):", "  answer = numb1 + numb2", "  return answer", "result = addNumbers(2,2)", "# Print result to the console", "print result", "#Finish", "finish()", "# python code", "#", "# script_name: Return Statements", "#", "# author: The EarSketch Team", "#", "# description: Linking two beats together with return statements", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(100)", "rhythm1 = \"0+++0+0+0+--0+00\"", "rhythm2 = \"0+0-00++0-000+++\"", "#Music", "def createBeat(startMeasure, soundClip, beatString):", "  endMeasure = startMeasure + 3", "  for measure in range(startMeasure, endMeasure):", "    makeBeat(soundClip, 1, measure, beatString)", "  # Return ending measure so we can use it outside function", "  return endMeasure", "# Function calls", "# Assigning the value we return to a variable", "newStart = createBeat(1, HIPHOP_DUSTYGROOVE_007, rhythm1)", "# Passing the returned value into another function", "createBeat(newStart, HIPHOP_DUSTYGROOVE_010, rhythm2)", "#Finish", "finish()", "# python code", "#", "# script_name: String Concatenation", "#", "# author: The EarSketch Team", "#", "# description: Combining two strings into one string", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Concatenation", "stringA = \"Computer\"", "stringB = \"Science!\"", "# concatenating stringA and stringB with a space in between", "newString = stringA + \" \" + stringB", "print newString", "#Finish", "finish()", "# python code", "#", "# script_name: Beat String Concatenation", "#", "# author: The EarSketch Team", "#", "# description: Combining beat strings to form a complex rhythm", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(100)", "#Music", "beatString1 = \"0++00-0+\"", "beatString2 = \"-00+0---\"", "beatString3 = \"0+++0-0+\"", "beatString4 = \"0+00++00\"", "beatString5 = \"0+000-0+\"", "kick = OS_KICK03", "snare = OS_SNARE01", "hat = OS_CLOSEDHAT03", "# creating different rhythms for each sound", "finalKick = beatString1 + beatString5 + beatString3 + beatString1 + beatString2 + beatString4", "finalSnare = beatString2 + beatString1 + beatString4 + beatString3 + beatString5 + beatString1", "finalHat = beatString5 + beatString4 + beatString3 + beatString2 + beatString1 + beatString3", "# function calls", "makeBeat(kick, 1, 1, finalKick)", "makeBeat(snare, 2, 1, finalSnare)", "makeBeat(hat, 3, 1, finalHat)", "#Finish", "finish()", "# python code", "#", "# script_name: Substrings", "#", "# author: The EarSketch Team", "#", "# description: Using slice notation to make substrings", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(100)", "# Extracting a substring", "a = \"Pulling a rabbit out of a string\"", "# Makes a new string from indices 10, 11, 12, 13 ,14 ,and 15", "b = a[10: 16]", "# print the contents of b to the console", "print b", "# print the length of b to the console", "print len(b)", "#Finish", "finish()", "# python code", "#", "# script_name: String Operations", "#", "# author: The EarSketch Team", "#", "# description: Expand a beat string into a longer beat string.", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "initialBeat = \"0+0+00-00+++-0++\"", "drumInstr = RD_UK_HOUSE_MAINBEAT_10", "def expander(beatString):", "  newBeat = \"\"", "  for i in range(0, len(beatString)):", "    beatSlice = beatString[0:i]", "    newBeat = newBeat + beatSlice", "  # return the new beat string so it can be used outside the function", "  return newBeat", "finalBeat = expander(initialBeat)", "print finalBeat", "#makeBeat(drumInstr, 1, 1, initialBeat) # initial beat string", "makeBeat(drumInstr, 1, 1, finalBeat)", "#Finish", "finish()", "# python code", "#", "# script_name: Advanced Transition Techniques - Looping", "#", "# author: The EarSketch Team", "#", "# description: Transitioning between sections by looping the lead line", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(140)", "#Music", "beat1 = \"0---0+0---0-0+++\"", "drum = RD_FUTURE_DUBSTEP_MAINBEAT_11", "lead = RD_FUTURE_DUBSTEP_LEADSYNTH_10", "lead2 = RD_TRAP_PITCHLEAD_3", "wobble1 = DUBSTEP_BASS_WOBBLE_006", "swoosh = RD_FUTURE_DUBSTEP_SFX_8", "subBass = RD_FUTURE_DUBSTEP_SUBBASS_4", "# Custom Functions", "# define a custom function to use for looping with different step sizes", "def easyLoops(startMeasure, numSteps, startString):", "  endString = \"\"", "  for i in range(numSteps):", "    endString += startString", "  makeBeat(lead, 1, startMeasure, endString)", "# define function for first section of music", "def section1(startMeasure, endMeasure):", "  # drums", "  fitMedia(drum, 2, startMeasure, endMeasure)", "  # lead", "  for measure in range (2, 9, 2):", "    fitMedia(lead, 1, measure, measure + 1)", "  fitMedia(lead, 1, 9, 13)", "# define a function for four-measure transition", "def transition(startMeasure):", "  easyLoops(startMeasure, 4, \"0+++++++\")", "  easyLoops(startMeasure+2, 4, \"0+++\")", "  easyLoops(startMeasure+3, 4, \"0+\")", "  easyLoops(startMeasure+3.5, 8, \"0\")", "  fitMedia(swoosh, 3, startMeasure+2, startMeasure+4)", "# define a function for second section of music", "def section2(startMeasure, endMeasure):", "  # drums", "  for measure in range (startMeasure, endMeasure):", "	  makeBeat(drum, 2, measure, beat1)", "  # bass", "  fitMedia(subBass, 4, startMeasure, endMeasure)", "  # lead", "  fitMedia(lead2, 1, startMeasure, 21)", "  for measure in range(21, 23):", "	  makeBeat(lead2, 1, measure, \"0-000+++++++++++\")", "  makeBeat(lead2, 1, 23, \"0-000+++++++++++++++++++++++++++\")", "  fitMedia(lead2, 1, 25, 29)", "  for measure in range(29, endMeasure):", "  	makeBeat(lead2, 1, measure, beat1) # switch with drum beat for last phrase", "  # placing dubstep wobbles", "  fitMedia(wobble1, 5, 20.5, 21)", "  fitMedia(wobble1, 5, 24.5, 25)", "  fitMedia(wobble1, 5, 28.5, 29)", "  makeBeat(wobble1, 5, 26.5, \"0+--0+\")", "  makeBeat(wobble1, 5, 30.5, \"0+--0+\")", "# Function calls", "section1(1,17)", "transition(13)", "section2(17, 32)", "fitMedia(wobble1, 5, 32, 33) # End with longer a dubstep wobble", "#Effects", "setEffect(3, VOLUME, GAIN, -9) # dropping swoosh volume", "setEffect(2, VOLUME, GAIN, -6) # drop drum volume slightly", "setEffect(2, FILTER, FILTER_FREQ, 750, 1, 10000, 5) # filter envelope to bring drums in subtly", "#Finish", "finish()", "# python code", "#", "# script_name: Advanced Transition Techniques - Anacrusis", "#", "# author: The EarSketch Team", "#", "# description: Transitioning between sections using an anacrusis", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "chords1 = HOUSE_DEEP_CRYSTALCHORD_001", "chords2 = HOUSE_DEEP_CRYSTALCHORD_002", "chords3 = HOUSE_DEEP_CRYSTALCHORD_003", "chords4 = HOUSE_DEEP_CRYSTALCHORD_004", "bass = TECHNO_FM_BASS_004", "bass2 = HOUSE_DEEP_BASS_004", "lead1 = TECHNO_POLYLEAD_005", "lead2 = RD_TRAP_ARPBLEEPLEAD_5", "lead3 = HIPHOP_DUSTYGUITAR_002", "beat1 = HOUSE_MAIN_BEAT_008", "beat2 = HOUSE_MAIN_BEAT_009", "riser = HOUSE_SFX_WHOOSH_007", "# Custom Functions", "def chordProg(clip, startMeasure):", "  for measure in range (startMeasure, 8, 4):", "    fitMedia(clip, 1, measure, measure + 1)", "# Section 1", "# chords", "chordProg(chords1, 1)", "chordProg(chords2, 2)", "chordProg(chords3, 3)", "chordProg(chords4, 4)", "# beat", "fitMedia(beat1, 2, 1, 8)", "# bass", "for measure in range (1, 8):", "  makeBeat(bass, 3, measure, \"0+++++++0++0++0+\")", "# lead", "fitMedia(lead1, 4, 1, 8)", "# Transition", "insertMediaSection(lead2, 5, 8, 4, 5) # placing the last measure (4 beats) of this clip", "fitMedia(riser, 5, 7, 8) # partial riser", "#Section 2", "# lead", "fitMedia(lead2, 1, 9, 17)", "fitMedia(lead3, 6, 9, 17)", "# beat", "fitMedia(beat2, 2, 9, 17)", "# bass on off-beat", "for measure in range(9, 17):", "  makeBeat(bass2, 3, measure, \"--0+--0+--0+--0+\")", "#Effects", "setEffect(4, VOLUME, GAIN, -18)", "setEffect(6, VOLUME, GAIN, -10)", "#Finish", "finish()", "# python code", "#", "# script_name: Printing Demo", "#", "# author: The EarSketch Team", "#", "# description: Using the print statement to print messages in the console", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Printing", "# prints the result of 3*4", "print 3 * 4", "# prints the value of x", "x = 3 * 4", "print x", "# evaluates x/y, then prints the result", "y = 2", "print x / y", "# prints the result of the concatenation", "print \"De\" + \"bug\"", "#Finish", "finish()", "# python code", "#", "# script_name: Overlap Logic Error", "#", "# author: The EarSketch Team", "#", "# description: Code that causes a logic error", "#", "from earsketch import *", "init()", "setTempo(120)", "groove1 = HIPHOP_DUSTYGROOVE_011", "groove2 = HIPHOP_DUSTYGROOVE_010", "for measure in range(1, 9):", "  fitMedia(groove1, 1, measure, measure + 2)", "  fitMedia(groove2, 2, measure + 2, measure + 4)", "finish()", "# python code", "#", "# script_name: Overlap Correction", "#", "# author: The EarSketch Team", "#", "# description: Creating an alternating drum beat", "#", "from earsketch import *", "init()", "setTempo(120)", "groove1 = HIPHOP_DUSTYGROOVE_011", "groove2 = HIPHOP_DUSTYGROOVE_010", "for measure in range(1, 9, 4):", "  fitMedia(groove1, 1, measure, measure + 2)", "  fitMedia(groove2, 2, measure + 2, measure + 4)", "finish()", "# python code", "#", "# script_name: Argument Order Error", "#", "# author: The EarSketch Team", "#", "# description: Error using using 7-parameter setEffect()", "#", "from earsketch import *", "init()", "setTempo(128)", "lead = YG_EDM_LEAD_BIG_1", "kick = YG_EDM_KICK_1", "riser = RD_EDM_SFX_RISER_AIR_1", "bigClaps = YG_EDM_CLAPS_1", "fitMedia(bigClaps, 1, 1, 5)", "fitMedia(riser, 2, 1, 5)", "fitMedia(kick, 3, 5, 9)", "fitMedia(lead, 4, 5, 9)", "setEffect(2, VOLUME, GAIN, -10)", "setEffect(1, FILTER, FILTER_FREQ, 1, 10000, 5, 100)", "finish()", "# python code", "#", "# script_name: Argument Order Correction", "#", "# author: The EarSketch Team", "#", "# description: Using 7-parameter setEffect() effectively", "#", "from earsketch import *", "init()", "setTempo(128)", "lead = YG_EDM_LEAD_BIG_1", "kick = YG_EDM_KICK_1", "riser = RD_EDM_SFX_RISER_AIR_1", "bigClaps = YG_EDM_CLAPS_1", "fitMedia(bigClaps, 1, 1, 5)", "fitMedia(riser, 2, 1, 5)", "fitMedia(kick, 3, 5, 9)", "fitMedia(lead, 4, 5, 9)", "setEffect(2, VOLUME, GAIN, -10)", "setEffect(1, FILTER, FILTER_FREQ, 10000, 1, 100 , 5)", "finish()", "# python code", "#", "# script_name: [A meaningful title for your script]", "#", "# author: [Your name, or your team's name]", "#", "# description: [A brief, but detailed description of your program. What does it do? How does it do this?]", "#", "#", "#", "# python code", "#", "# script_name: Simple Console Input", "#", "# author: The EarSketch Team", "#", "# description: Interacting with a prompt via console input", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Body", "print \"Hello.\"", "n = readInput(\"What is your name? \")", "print \"Hi \" + n + \"! It is nice to meet you.\"", "#Finish", "finish()", "# python code", "#", "# script_name: Musical Console Input", "#", "# author: The EarSketch Team", "#", "# description: Creating a dubstep song with user-specified parameters", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "t = readInput(\"Set a valid tempo for this song (120 - 160): \")", "print \"You set a tempo of \" + t + \"bpm\"", "tempo = int(t)", "setTempo(tempo)", "#Music", "kick = OS_KICK02", "clap = OS_CLAP04", "beatString1 = \"0+++++--------00\"", "beatString2 = \"0++0++0++++++---\"", "clipNum = readInput(\"Select a clip number between 10 and 46: \")", "dubStepClip = \"DUBSTEP_BASS_WOBBLE_0\"", "finalClip = dubStepClip + clipNum", "# user selected dubstep wobbles", "fitMedia(finalClip, 1, 1, 5)", "# kick", "for measure in range(1, 5, 2):", "  makeBeat(kick, 2, measure, (beatString1 + beatString2))", "# clap", "for measure in range(2, 6):", "  fitMedia(clap, 3, measure - 0.5, measure - 0.25)", "#Finish", "finish()", "#        python code", "#        script_name: Boolean Example", "#", "#        author: The EarSketch Team", "#        description: Before running the code, determine if each of the expression is true or false", "#", "from earsketch import *", "init()", "setTempo(120)", "#Expression 1", "#Is it true that 1 + 1 equals to 2?", "a = (1 + 1 == 2)", "print (a)", "#Expression 2", "#Is it true that 2 + 2 does not equal to 5?", "b = (2 + 2 != 5)", "print (b)", "#finish", "finish()", "#        python code", "#        script_name: Compound Boolean Example", "#", "#        author: The EarSketch Team", "#        description: Before running the code, determine if each of the expression is true or false", "#", "#", "from earsketch import *", "init()", "setTempo(120)", "#Expression 1", "startMeasure = 1", "endMeasure = 9", "#Is it true that startMeasure equals to 1 AND endMeasure is greater than 10?", "a = (startMeasure == 1 and endMeasure > 10)", "print (a)", "#Expression 2", "#Is it true that startMeasure equals to 1 OR endMeasure is greater than 10?", "b = (startMeasure == 1 or endMeasure > 10)", "print (b)", "#finish", "finish()", "#        python code", "#        script_name: Compound Boolean Example", "#", "#        author: The EarSketch Team", "#        description: Before running the code, determine if each of the expression is true or false", "#", "#", "from earsketch import *", "init()", "setTempo(120)", "#Expression 1", "startMeasure = 1", "endMeasure = 9", "#Is it true that startMeasure equals to 1 AND endMeasure is greater than 10?", "a = (startMeasure == 1 and endMeasure > 10)", "print (a)", "#Expression 2", "#Is it true that startMeasure equals to 1 OR endMeasure is greater than 10?", "b = (startMeasure == 1 or endMeasure > 10)", "print (b)", "#finish", "finish()", "if (condition):", "    statement to execute if condition evaluates to True", "# python code", "#", "# script_name: Conditionals Basic #1", "#", "# author: The EarSketch Team", "#", "# description: Using Simple Conditionals", "#", "#", "#", "# Setup", "from earsketch import *", "init()", "setTempo(120)", "# Example 1: What is 1 + 1?  Take a guess as to what will be printed out.", "answer = 1 + 1", "if (answer == 2):", "  print 'The answer is 2'", "if (answer == 3):", "  print 'The answer is 3'", "# Finish", "finish()", "# python code", "#", "# script_name: Conditionals Basic #2", "#", "# author: The EarSketch Team", "#", "# description: Musical example of Conditionals.", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(140)", "# What music do you want to listen to?", "a = 'energetic'", "b = 'rock'", "# Did you want to listen to energetic hip hop?", "if (a == 'energetic' and b == 'hip hop'):", "  print 'Here is an energetic hiphop song!'", "  fitMedia(RD_TRAP_MAIN808_BEAT_6, 1, 1, 9)", "  fitMedia(RD_TRAP_ANALOGSINELEAD_1, 2, 1, 9)", "# Energetic hip hop isn't what you were looking for?", "else:", "  print 'Here is an energetic rock song!'", "  fitMedia(RD_ROCK_POPRHYTHM_MAINDRUMS_6, 1, 1, 9)", "  fitMedia(RD_ROCK_POPRHYTHM_GUITAR_12, 2, 1, 9)", "# Finish", "finish()", "# python code", "#", "# script_name: Conditionals", "#", "# author: The EarSketch Team", "#", "# description: Change your answer to see how it affects the conditional statement", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "# Body", "a = readInput(\"Do you like hip-hop music? Type yes or no.\")", "# using logical OR, in case user capitalizes their response.", "if (a == \"yes\" or a == \"Yes\" or a == \"YES\"):", "    print \"Hip-hop it is!\"", "    fitMedia(YG_NEW_HIP_HOP_ARP_1, 1, 1, 9)", "    fitMedia(RD_TRAP_MAIN808_BEAT_1, 2, 1, 9)", "# an answer other than \"Yes\" or \"yes\" was entered", "else:", "    print \"Ok, here is some funk.\"", "    fitMedia(YG_NEW_FUNK_ELECTRIC_PIANO_4, 1, 1, 9)", "    fitMedia(YG_NEW_FUNK_DRUMS_4, 2, 1, 9)", "# Finish", "finish()", "# python code", "#", "# script_name: Which Comes First", "#", "# author: The EarSketch Team", "#", "# description: Let the user choose which instrument plays first.", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Body", "input = readInput(\"Which instrument comes first? Type Guitar, Bass, or Drums.\")", "first_inst = str(input)", "if (first_inst == \"guitar\") or (first_inst == \"Guitar\") or (first_inst == \"GUITAR\"):", "	print \"Guitar comes first\"", "	fitMedia(Y02_GUITAR_1, 1, 1, 9)", "	fitMedia(Y01_BASS_1, 2, 3, 9)", "	fitMedia(Y02_DRUM_SAMPLES_1, 3, 3, 9)", "elif (first_inst == \"bass\") or (first_inst == \"Bass\") or (first_inst == \"BASS\"):", "  print \"Bass comes first\"", "  fitMedia(Y01_BASS_1, 1, 1, 9)", "  fitMedia(Y02_GUITAR_1, 2, 3, 9)", "  fitMedia(Y02_DRUM_SAMPLES_1, 3, 3, 9)", "elif (first_inst == \"drums\") or (first_inst == \"Drums\") or (first_inst == \"DRUMS\"):", "  print \"Drums come first\"", "  fitMedia(Y02_DRUM_SAMPLES_1, 1, 1, 9)", "  fitMedia(Y02_GUITAR_1, 2, 3, 9)", "  fitMedia(Y01_BASS_1, 3, 3, 9)", "else:", "  print \"Please select Guitar, Bass, or Drums.\"", "#Finish", "finish()", "# python code", "#", "# script_name: Lists", "#", "# author: The EarSketch Team", "#", "# description: Using a list to hold several audio clips", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(130)", "#Music", "#create a list of clips", "myEnsemble = [RD_ROCK_POPRHYTHM_MAINDRUMS_12, RD_ROCK_POPELECTRICBASS_16, RD_ROCK_POPELECTRICLEAD_11]", "fitMedia(myEnsemble[0], 1, 1, 5) # accessing index 0", "fitMedia(myEnsemble[1], 2, 1, 5) # accessing index 1", "fitMedia(myEnsemble[2], 3, 1, 5) # accessing index 2", "#Finish", "finish()", "# python code", "#", "# script_name: List Iteration", "#", "# author: The EarSketch Team", "#", "# description: Printing list elements with a loop", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Body", "myList = [\"Get\", \"thee\", \"to\", \"the\", \"console!\"]", "# Stopping condition determined by list length", "for i in range (0, len(myList)):", "  print myList[i];", "#Finish", "finish()", "# python code", "#", "# script_name: Additive Introduction", "#", "# author: The EarSketch Team", "#", "# description: Creating an additive introduction with array iteration", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "introArray = [HIPHOP_DUSTYGROOVE_003, TECHNO_LOOP_PART_006, HOUSE_SFX_WHOOSH_001, TECHNO_CLUB5THPAD_001]", "for measure in range (1, 5):", "	mediaIndex = measure - 1 # zero-based list index", "	track = measure # change track with measure", "	fitMedia(introArray[mediaIndex], track, measure, 9)", "#Finish", "finish()", "# python code", "#", "# script_name: Making a drum set", "#", "# author: The EarSketch Team", "#", "# description: Using arrays with makeBeat()", "#", "#Setup", "from earsketch import *", "init()", "setTempo(100)", "#Music", "drums = [ELECTRO_DRUM_MAIN_BEAT_001, # an list of drum clips", "		 ELECTRO_DRUM_MAIN_BEAT_002,", "		 ELECTRO_DRUM_MAIN_BEAT_003,", "		 ELECTRO_DRUM_MAIN_BEAT_004]", "# each number is actually an index into the drums list", "drumPattern = '0+0+11112+2+3+++'", "makeBeat(drums, 1, 1, drumPattern)", "#Finish", "finish()", "# python code", "#", "# script_name: List Operations", "#", "# author: The EarSketch Team", "#", "# description: Using list operations to change our drum sounds every four measures", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(120)", "#Music", "drumSounds = [OS_CLAP01, OS_CLOSEDHAT01, OS_COWBELL01, OS_KICK01, OS_LOWTOM01, OS_SNARE01]", "beatString = \"5-5132-034550011\"", "for measure in range(1, 33):", "	makeBeat(drumSounds, 1, measure, beatString)", "	if (measure % 4 == 0): # Only True at every fourth measure", "		# rotate list items so last item moves to first slot", "		listLength = len(drumSounds)", "		lastSound = drumSounds[listLength-1:listLength]", "		allButLastSound = drumSounds[0:listLength-1]", "		drumSounds = lastSound + allButLastSound", "#Finish", "finish()", "# python code", "#", "# script_name: Random Clip", "#", "# author: The EarSketch Team", "#", "# description: Randomly selecting clips from a list", "#", "#", "#", "#Setup", "from earsketch import *", "from random import *  # need to import the random library to use randint()", "init()", "setTempo(100)", "#Music", "sampleBank = [YG_TRAP_SYNTH_BELL_1,", "			  YG_TRAP_STRINGS_1,", "			  YG_TRAP_SHORT_SYNTH_1,", "			  YG_TRAP_HIT_1,", "			  YG_TRAP_SYNTH_LEAD_6,", "			  YG_TRAP_BELLS_1]", "for i in range(1, 9):", "	# Generates a random index number between 0 and 5 because the length of sampleBank list is 6 (total number of samples)", "	index = randint(0, len(sampleBank) - 1)", "	fitMedia(sampleBank[index], 1, i, i+1) # Use the random index to get a list element", "fitMedia(YG_TRAP_KICK_4, 2, 1, 9)", "fitMedia(YG_TRAP_BASS_1, 3, 1, 9)", "fitMedia(YG_TRAP_SNARE_5, 4, 1, 9)", "#Finish", "finish()", "# python code", "#", "# script_name: Amen Break", "#", "# author: The EarSketch Team", "#", "# description: Constructing the amen break with string concatenation", "#", "#", "#", "#Setup", "from earsketch import *", "init()", "setTempo(140)", "#Music", "drums = [OS_KICK05, OS_SNARE06, Y24_HI_HATS_1, Y58_HI_HATS_1, OS_OPENHAT01]", "a = \"0+0-1+-1+1001+-1\"", "b = \"0+0-1+-1-10---1+\"", "c = \"-1001+-1+10---1+\"", "cym1 = \"2+2+2+2+2+2+2+2+\"", "cym2 = \"2+2+2+2+2+3+2+2+\"", "cym3 = \"2+2+2+2+2+4+2+2+\"", "amenBreak = a + a + b + c", "amenCymbals = cym1 + cym1 + cym2 + cym3", "makeBeat(drums, 1, 1, amenBreak)", "makeBeat(drums, 2, 1, amenCymbals)", "#Finish", "finish()", "insertSection = \"\"", "for i in range(8):", "    insertSection = insertSection + str( randint(0, 4) )", "newA = insertSection + a[8:16]", "newBeat = a + newA + b + c", "# python code", "#", "# script_name: Amen Remix", "#", "# author: The EarSketch Team", "#", "# description: Replacing part of the amen break string with a random beat string", "#", "#", "#", "#Setup", "from earsketch import *", "from random import *", "init()", "setTempo(140)", "#Music", "drums = [OS_KICK05, OS_SNARE06, Y24_HI_HATS_1, Y58_HI_HATS_1, OS_OPENHAT01]", "a = \"0+0-1+-1+1001+-1\"", "b = \"0+0-1+-1-10---1+\"", "c = \"-1001+-1+10---1+\"", "cym1 = \"2+2+2+2+2+2+2+2+\"", "cym2 = \"2+2+2+2+2+3+2+2+\"", "cym3 = \"2+2+2+2+2+4+2+2+\"", "amenBreak = a + a + b + c", "amenCymbals = cym1 + cym1 + cym2 + cym3", "insertSection = \"\"", "for i in range(8):", "	# building the random beat string, 8 characters long", "	insertSection += str( randint(0, 4) )", "newA = insertSection + a[8:16]", "newBeat = a + newA + b + c", "makeBeat(drums, 1, 1, newBeat)", "makeBeat(drums, 2, 1, amenCymbals)", "#Finish", "finish()"];

var apiFunctions = ["analyze", "random", "randint", "gauss", "analyzeForTime", "analyzeTrack", "analyzeTrackForTime", "createAudioSlice", "dur", "finish", "fitMedia", "importImage", "importFile", "init", "insertMedia", "insertMediaSection", "makeBeat", "makeBeatSlice", "print", "readInput", "replaceListElement", "replaceString", "reverseList", "reverseString", "rhythmEffects", "selectRandomFile", "setEffect", "setTempo", "shuffleList", "shuffleString"];
var simplifiedASTdictionary = { //conversions from AST node names to numbers for numericized AST
    'empty': 0, 'for': 1, 'body': 2, 'while': 3, 'def': 4, 'args': 5, 'conditional': 6, 'assign': 7, 'subscript': 8, 'slice': 9, 'index': 10,
    'call': 11, 'return': 12, 'compare': 13, 'not': 14, 'boolop': 15, 'binop': 16, 'bool': 17, 'var': 18, 'func': 19, 'null': 20,
    'float': 21, 'int': 22, 'str': 23, 'list': 24, 'tuple': 25, 'elts': 26, "Mod": 27, 'Eq': 28, 'Lt': 29, 'LtE': 30,
    'Add': 31, 'Sub': 32, 'Mult': 33, 'Div': 34, 'Pow': 35, 'BitXor': 36, 'JSFor': 37, 'FunctionExp':38, 'attr':39
};

var bodyIDs = [37, 1, 3, 4];


var Level3OriginalForPurpose = ["ints", "booleans", "floats", "strings", "lists", "variables", "comparisons", "listOps", "strOps", "boolOps", "mathematicalOperators"];

export { STRUCTURE_SAMPLES, PY_LIST_FUNCS, PY_STR_FUNCS, PY_CREATE_LIST_FUNCS, PY_CREATE_STR_FUNCS, JS_BUILT_IN_OBJECTS, JS_LIST_FUNCS, JS_STR_FUNCS, JS_STR_LIST_OVERLAP, starterReturns, sampleCode, apiFunctions, simplifiedASTdictionary, bodyIDs, Level3OriginalForPurpose };

